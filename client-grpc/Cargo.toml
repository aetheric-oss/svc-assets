[package]
description = "Aetheric assets service gRPC client"
keywords    = ["vtol", "client", "grpc", "rest", "assets"] # max 5
name        = "svc-assets-client-grpc"
version     = "0.5.0"

authors.workspace      = true
categories.workspace   = true
edition.workspace      = true
homepage.workspace     = true
license-file.workspace = true
repository.workspace   = true

[features]
dev       = ["mock", "tokio"]
test_util = ["mock", "stub_backends"]
# Will add a 'mock' module for the enabled resources, providing access to mock data generation functions
mock = []
# Will use a stubbed server connection, only use for tests!
stub_backends = [
  "svc-assets/stub_server",
  "lib-common/grpc_mock",
  "tower",
  "hyper-util",
  "tokio",
]
# Will implement stub functions for the client, only use for tests!
stub_client = ["svc-assets"]

[dependencies]
cfg-if      = "1.0"
hyper-util  = { version = "0.1", optional = true }
log         = { version = "0.4" }
prost       = "0.13"
prost-types = "0.13"
svc-assets  = { path = "../server", optional = true }
tonic       = "0.12"
tower       = { version = "0.5", optional = true }

[dependencies.lib-common]
features = ["grpc"]
git      = "https://github.com/aetheric-oss/lib-common.git"
tag      = "v3.0.0"

[dependencies.tokio]
features = ["macros", "rt-multi-thread"]
optional = true
version  = "1.40"

[dependencies.utoipa]
version = "4.2"

[dev-dependencies]
logtest = "2.0"

# Make sure we enable the 'mock_services' features when running tests
[dev-dependencies.svc-assets-client-grpc]
features = ["dev"]
path     = "."

[[example]]
name = "grpc"

# https://github.com/xd009642/tarpaulin?tab=readme-ov-file#ignoring-code-in-files
# removes warnings introduced by rust 1.8
# can be removed when the cfg attributes can be replaced with `#[coverage(off)]` (currently only available in nightly)
[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(tarpaulin_include)'] }
